HTML/Javascript version

<div id="testo">questo articolo contiene questo testo, questo è ripetuto tre volte, testo due volte</div>
<div id="output"></div>
<script>
/**
 * Write a Javascript function that creates a word cloud from the text contents of an html element
 *
 * This function must accept the following parameters:
 * @param string inputElemID - the id of the element from which it must analyze the text for the wordcloud
 * @param string outputElemID - the id of an element inside which it must create the wordcloud
 * @param int minLength - the minimum lenght of words to be considered for the wordcloud
 * @param Array stopWords - an array of words that must be ignored while creating the wordcloud
 *
 *
 * Every word in the wordcloud must have a font-weight proportional to the number of occurences of the word in the text.
 *
 * Ignore punctuation marks (.,;: etc)
 * Ignore HTML markup nested inside the input element
 * Normalize everything to lowercase
 */


function getValidWords(inputText, minLength, stopWords) {
  // check punctuation marks
  // and return the only words
  const words = inputText.match(/\b\w+\b/g);
  const validWords = words.filter((word) => {
    if (stopWords.includes(word)) return false;
    if (word.length < minLength) return false;
    return true;
  });

  return validWords;
}
 
 
function wordcloud(inputElemID, outputElemID, minLength, stopWords) {
  const inputText = document.getElementById("testo").innerHTML;
  const inputTextArr = getValidWords(inputText, minLength, stopWords);
  const mp = {};

  inputTextArr.forEach((text) => {
    if (!mp[text]) {
      mp[text] = 1;
    } else {
      mp[text]++;
    }
  });

  let output = `
      <ul>
  
    `;

  for (text in mp) {
    output += `<li><span style="font-size:${mp[text]}em">${text}<span></li>
    `;
  }

  output += `
      </ul>
    `;

  document.getElementById(outputElemID).innerHTML = output;
}

/*
Given the above HTML we expect a call to wordcloud("testo", "output") to result in div#output being populated like this:
<ul>
    <li><span style="font-size:3em">questo<span></li>
    <li><span style="font-size:2em">testo<span></li>
    <li><span style="font-size:2em">volte<span></li>
    <!-- .... -->
</ul>
*/
</script>



Python version

# input is a string to be analyzed
# return value of the function is a string containing the mark-up of the wordcloud
# Every word in the wordcloud must have a font-weight proportional to the number of occurences of the word in the text.
# Ignore punctuation marks (.,;: etc)
# Ignore HTML markup nested inside the input element
# Normalize everything to lowercase

def get_valid_words(input_text, min_length, stopwords):
    # check punctuation marks
    # and return the only words
    words = re.findall(r'\b\w+\b', input_text)

    valid_words = []

    for word in words:
        if word in stopwords:
            continue
        if len(word) < min_length:
            continue
        
        valid_words.append(word)
    
    return valid_words

def wordcloud(input: str, min_length = 4, stopwords = ['uno', 'due', 'tre']):
    valid_words = get_valid_words(input, min_length, stopwords)
    mp = {}

    output = """
      <ul>
    """

    for word in valid_words:
        if word in mp:
            mp[word] += 1
        else:
            mp[word] = 1
    
    for word, count in mp.items():
        list = f'<li><span style="font-size:{count}em">{word}<span></li>\n'
        output += list

    output += '''
        </ul>
    '''

    return output
    

input_example = "questo articolo contiene questo testo, questo è ripetuto tre volte, testo due volte"

wordcloud = wordcloud(input_example)

expected_wordcloud = """
<ul>
    <li><span style="font-size:3em">questo<span></li>
    <li><span style="font-size:2em">testo<span></li>
    <li><span style="font-size:2em">volte<span></li>
    <!-- .... -->
</ul>
"""